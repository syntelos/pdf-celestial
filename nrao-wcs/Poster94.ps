%!PS-Adobe-2.0
%%Creator: Eric Greisen
%%Title: Poster94.ps
%%CreationDate: Sun 1994 September 1
%%Pages: 8
%%PageOrder: Ascend
%%EndComments
%%Page: 1 1
%%%%BoundingBox: 0 0 480 420
%%PageBoundingBox: 0 0 480 420

userdict /start-hook known {start-hook} if

   /AuthorFont /Times-Bold findfont 45 scalefont def
   /InstFont /Times-Roman findfont 30 scalefont def

 90 rotate
 95 -160 translate
 1.3 1.3 scale

AuthorFont setfont
 82 0 moveto

 (Eric W. Greisen) show

 77 -160 moveto

 (Mark Calabretta) show

InstFont setfont

 0 -60 moveto

 (National Radio Astronomy Observatory) show

 15 -220 moveto

 (Australia Telescope National Facility) show

 showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Eric Greisen
%%Title: wcsPRO.ps
%%Page: 2 2
%%%%BoundingBox: 0 0 612 792
%%PageBoundingBox: 0 0 612 792
%%EndComments

   /TextFont /Courier-Bold findfont 15 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 24 scalefont def

  17  72 translate
 1.25 1.25 scale
                            % color flag 1 => yes
   /color 1 def

                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /w1 0.4 def
   /w2 0.8 def
   /w4 1.6 def
   /nstr 13 string def

   % Radius of the generating sphere.
   /r0 2 cm2pts mul def
   /r1 r0 pi mul 180 div def

  /prt-n {
      dup abs 0.001 lt {pop 0} if
      nstr cvs show
      } def

  /BoxIt {
     0 setgray
     dup stringwidth pop  /Xsp exch def
     /Ysp 15 def   /Xsp Xsp 8 add def
     currentpoint /Yc exch def /Xc exch def
     Xsp 2 div neg 0 rmoveto
     0 -2 Ysp mul rlineto
     Xsp 0 rlineto
     0 2 Ysp mul rlineto
     Xsp  neg 0 rlineto
     Xc Yc moveto
     DoStroke
     color 1 eq {0 1 1 setrgbcolor} if
     Xsp 8 sub 2 div neg Ysp neg rmoveto show
     Xc Yc Ysp sub 1 sub moveto
     (COORDS) dup stringwidth pop 2 div neg -11 rmoveto show
     Xc Yc 2 Ysp mul sub moveto
     DoStroke
     currentpoint /Yc exch def /Xc exch def
     0 setgray
     } def

   /CenterIt {
      color 1 eq {0 1 0 setrgbcolor} if
      dup stringwidth pop /Xsp exch def
      Xsp -2 div -11 rmoveto
      show
      Xsp -2 div -4 rmoveto
      currentpoint /Yc exch def /Xc exch def
      DoStroke
      0 setgray
      } def

   /DoStroke {
      currentpoint /Ycl exch def /Xcl exch def
      stroke
      Xcl Ycl moveto
      } def

   /Arrow {
      -5 7 rmoveto
      5 -7 rlineto
      5 7 rlineto
      -5 -7 rmoveto
      DoStroke
      } def

userdict /start-hook known {start-hook} if


/vmsave save def
2 setlinecap

172 500 translate

w4 setlinewidth

  LablFont setfont
  0 0 moveto
 -149 -8 rmoveto
 (Conversion of Pixels to Coordinates) show


  TextFont setfont
  0 0 moveto
  0 -20 rmoveto

  (ACTUAL PIXEL) BoxIt

  0 -20 rlineto
  DoStroke
  (optional correction table) CenterIt
  0 -20 rlineto Arrow

  (IDEAL PIXEL) BoxIt

  0 -20 rlineto
  DoStroke
  (linear transformation: multiply by) CenterIt
  197 17 rmoveto
  -42 -17 rlineto
  42 -17 rlineto
  3 21 rmoveto
  DoStroke
  color 1 eq {0.9 0 0 setrgbcolor} if
  (PCnnnmmm) show
  Xc 200 add Yc 11 sub moveto
  (CRPIXn) show
  Xc Yc moveto
  0 setgray
  (PC matrix to rotate and skew) CenterIt
  0 -20 rlineto Arrow

  (TRUE PLANE PIXEL) BoxIt

  0 -20 rlineto
  DoStroke
  (Scale to physical units) CenterIt
  197 26 rmoveto
  -42 -17 rlineto
  42 -17 rlineto
  3 13 rmoveto
  DoStroke
  color 1 eq {0.9 0 0 setrgbcolor} if
  (CDELTn) show
  Xc Yc moveto
  0 setgray
  0 -20 rlineto Arrow

  (RELATIVE PHYSICAL) BoxIt

  0 -20 rlineto
  DoStroke
  (linear to spherical map projection) CenterIt
  197 26 rmoveto
  -42 -17 rlineto
  42 -17 rlineto
  3 21 rmoveto
  DoStroke
  color 1 eq {0.9 0 0 setrgbcolor} if
  (CTYPEn) show
  Xc 200 add Yc 4 sub moveto
  (PROJPi) show
  Xc Yc moveto
  0 setgray
  0 -20 rlineto Arrow

  (NATIVE SPHERICAL) BoxIt

  0 -20 rlineto
  DoStroke
  (spherical coordinate rotation) CenterIt
  197 26 rmoveto
  -42 -17 rlineto
  42 -17 rlineto
  3 21 rmoveto
  DoStroke
  color 1 eq {0.9 0 0 setrgbcolor} if
  (CRVALn) show
  Xc 200 add Yc 4 sub moveto
  (LONGPOLE) show
  Xc Yc moveto
  0 setgray
  0 -20 rlineto Arrow

  (CELESTIAL) BoxIt

%  ( Yc ) show Yc prt-n
vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Eric Greisen
%%Page: 3 3
%%%%BoundingBox: 0 0 610 210
%%PageBoundingBox: 0 0 610 210
%%EndComments

   /TextFont /Courier-Bold findfont 16 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 30 scalefont def
   /lablFont /Helvetica-BoldOblique findfont 20 scalefont def

 21 41 translate

 90 rotate
 165 -207 translate

                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /w1 0.4 def
   /w2 0.8 def
   /w4 1.6 def

                            % Radius of the generating sphere.
   /r0 2 cm2pts mul def
   /r1 r0 pi mul 180 div def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      setlinewidth
      2 div dup
      cos /a1 exch def
      sin /a2 exch def
      /theta 90 def
      0 2 sqrt r0 mul moveto
      36 {
         /theta theta 5 sub def
         /a0 theta cos a1 mul 1 add 2 div sqrt def
         -1 r0 mul theta cos mul a2 mul a0 div
         r0 theta sin mul a0 div lineto
         } repeat
      stroke
      -2 r0 mul a2 mul a1 1 add 2 div sqrt div 0 moveto
      -2 2 rmoveto
      90 rotate
      show
      -90 rotate
      stroke
      0 setgray
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      setlinewidth
      dup
      cos /a1 exch def
      sin /a2 exch def
      /phi -180 def
      2 sqrt r0 mul dup a1 mul exch a2 mul moveto
      72 {
         /phi phi 5 add def
         /a0 phi 2 div cos a1 mul 1 add 2 div sqrt def
         -1 r0 mul a1 mul phi 2 div sin mul a0 div
         r0 a2 mul a0 div lineto
         } repeat
      0 r0 a2 mul a1 1 add 2 div sqrt div moveto
      2 2 rmoveto
      show
      stroke
      0 setgray
      } def

%%EndProcSet


userdict /start-hook known {start-hook} if


/vmsave save def
2 setlinecap

% 115 105 translate

LablFont setfont
 42 179 moveto
(Azimuthal projection) show
TextFont setfont

w4 setlinewidth
-90 -100 moveto
-90  100 lineto
stroke

newpath
color 1 eq {0.9 0 0 setrgbcolor} if
0 0 90 0 360 arc stroke
  0    0 moveto
0 0  2 0 360 arc stroke
-90    0 moveto
0 setgray
w2 setlinewidth
  0    0 lineto
-45   78 lineto
-45    0 lineto
180    0 lineto
-90   94 lineto
stroke

-110 45 moveto
(R) show
/Symbol findfont 10.5 scalefont setfont
0 -3 rmoveto
(q) show

-41 -13 moveto
TextFont setfont
(sin) show
2 0 rmoveto
/Symbol findfont 16 scalefont setfont
(q) show

-48 15 moveto
90 rotate
TextFont setfont
(cos) show
2 0 rmoveto
/Symbol findfont 16 scalefont setfont
(q) show
-90 rotate

-20 40 moveto
TextFont setfont
(1) show

-16 3 moveto
/Symbol findfont 16 scalefont setfont
(q) show

72 -13 moveto
/Symbol findfont 16 scalefont setfont
(m) show

310 0 translate

TextFont setfont

lablFont setfont
 -70 130 moveto
(Standard) show
 -55 110 moveto
(azimuthal projections) show
TextFont setfont

w4 setlinewidth

-90 -100 moveto
-90  160 lineto
stroke

newpath
color 1 eq {0.9 0 0 setrgbcolor} if
0 0 90 0 360 arc stroke
  0    0 moveto
0 0  2 0 360 arc stroke
-90    0 moveto
0 setgray
w2 setlinewidth

180  78 moveto
-90  78 lineto
-30  -4 rmoveto
(SIN) show
110  80 moveto
(SIN) show
180   0 moveto
-90   0 lineto

  0   0 moveto
-90 156 lineto
-30  -4 rmoveto
(TAN) show
-53  30 moveto
(TAN) show

 90   0 moveto
-90 104 lineto
-30  -4 rmoveto
(STG) show
  2  52 moveto
(STG) show
stroke

 -185 -220 translate

TextFont setfont

LablFont setfont
 75 70 moveto
(Cylindrical projection) show
TextFont setfont

   ()    0 w4 DrawMeridian
   ()   60 w2 DrawMeridian
   ()  120 w2 DrawMeridian
   ()  180 w4 DrawMeridian
   () -180 w4 DrawMeridian
   () -120 w2 DrawMeridian
   ()  -60 w2 DrawMeridian

   ()   60 w2 DrawParallel
   ()   30 w2 DrawParallel
   ()    0 w4 DrawParallel
   ()  -30 w2 DrawParallel
   ()  -60 w2 DrawParallel

w2 setlinewidth
   0    0 moveto
  3.5 r0 mul 0 lineto
  -1 r0 mul 1.5 r0 mul lineto
   0    0 moveto
 -0.4852 r0 mul 1.3284 r0 mul lineto
stroke

/r2 2 sqrt r0 mul def
 -15 r2 sub 1.5 r0 mul moveto
 12 0 rlineto
 -1 -5 rmoveto
 -5 5 rlineto
 -5 -5 rlineto
 5 5 rmoveto
 -9 r2 sub 0.75 r0 mul 8 add lineto
 0 -16 rmoveto
 -9 r2 sub 0 lineto
 -6 0 rmoveto
 12 0 rlineto
 -1 5 rmoveto
 -5 -5 rlineto
 -5 5 rlineto
 -14 r2 sub 0.75 r0 mul 3 sub moveto
/Courier-BoldItalic findfont 16 scalefont setfont
(y) show
stroke

 -14 3 moveto
/Symbol findfont 16 scalefont setfont
(q) show

 -1 r0 mul -15 r2 sub moveto
 0 12 rlineto
 5 -1 rmoveto
 -5 -5 rlineto
 5 -5 rlineto
 -5 5 rmoveto
 -0.5 r0 mul 8 sub -9 r2 sub lineto
 3 -5 rmoveto
(l) show
 -0.5 r0 mul 8 add -9 r2 sub moveto
 1.75 r0 mul 8 sub -9 r2 sub lineto
 3 -5 rmoveto
(m) show
 1.75 r0 mul 8 add -9 r2 sub moveto
 3.5 r0 mul -9 r2 sub lineto
 0 -6 rmoveto
 0 12 rlineto
 -5 -1 rmoveto
 5 -5 rlineto
 -5 -5 rlineto
 0 -15 r2 sub moveto
 0 12 rlineto
 -5 -1 rmoveto
 10 -10 rlineto
 -10 0 rmoveto
 10 10 rlineto
stroke

w4 setlinewidth
  -1 r0 mul 2 r0 mul moveto
  -1 r0 mul -2 r0 mul lineto
  r0 2 r0 mul moveto
  r0 -2 r0 mul lineto
stroke

/as 0.39 def
  1 as scale
newpath
  0 2 r0 mul as div r0 0 360 arc
stroke
newpath
  0 -2 r0 mul as div r0 180 360 arc
stroke

vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0
%%Title: CylidricalProjection.ps
%%Page: 4 4
%%%%BoundingBox: 0 0 260 215
%%PageBoundingBox: 0 0 260 215
%%EndComments

   /TextFont /Courier-Bold findfont 11 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 27 scalefont def
   /lablFont /Helvetica-Oblique findfont 18 scalefont def


  31 55 translate
  1.1 1.1 scale


 90 rotate
 183 -153 translate

                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /w1 0.4 def
   /w2 0.8 def
   /w4 1.6 def

   % Radius of the generating sphere.
   /r0 2 cm2pts mul def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      setlinewidth
      2 div dup
      cos /a1 exch def
      sin /a2 exch def
      /theta 90 def
      0 2 sqrt r0 mul moveto
      36 {
         /theta theta 5 sub def
         /a0 theta cos a1 mul 1 add 2 div sqrt def
         -1 r0 mul theta cos mul a2 mul a0 div
         r0 theta sin mul a0 div lineto
         } repeat
      stroke
      -2 r0 mul a2 mul a1 1 add 2 div sqrt div 0 moveto
      -2 2 rmoveto
      90 rotate
      show
      -90 rotate
      stroke
      0 setgray
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      setlinewidth
      dup
      cos /a1 exch def
      sin /a2 exch def
      /phi -180 def
      2 sqrt r0 mul dup a1 mul exch a2 mul moveto
      2 sqrt r0 mul dup a1 mul -1 mul exch a2 mul lineto
      0 2 sqrt r0 mul a2 mul moveto
      2 2 rmoveto
      show
      stroke
      0 setgray
      } def

%%EndProcSet

userdict /start-hook known {start-hook} if


/vmsave save def
2 setlinecap

%130 85 translate

LablFont setfont
 26 125 moveto    % 70 90
 (Conic projections) show
TextFont setfont

   % Latitudes of the standard parallels, and constant of the cone.
   /Theta1 20 def
   /Theta2 70 def

   ()    0 w2 DrawMeridian
   ()   60 w1 DrawMeridian
   ()  120 w1 DrawMeridian
   ()  180 w4 DrawMeridian
   () -180 w4 DrawMeridian
   () -120 w1 DrawMeridian
   ()  -60 w1 DrawMeridian

   ()   60 w1 DrawParallel
   ()   30 w1 DrawParallel
   ()    0 w2 DrawParallel
   ()  -30 w1 DrawParallel
   ()  -60 w1 DrawParallel

w4 setlinewidth
/r2 2 sqrt r0 mul def
/rs Theta2 sin Theta1 sin sub Theta1 cos Theta2 cos sub div def
/rb Theta1 sin rs Theta1 cos mul add r2 mul def
/ra rb rs div def

 ra 0 moveto
 0 rb lineto
 -1 ra mul 0 lineto
stroke

w2 setlinewidth
 r2 Theta1 cos mul r2 Theta1 sin mul moveto
  0   0 lineto
 r2 Theta2 cos mul r2 Theta2 sin mul lineto

  0 rb moveto
  3 dup rs mul rmoveto
  10 dup rs mul rlineto
  -5 dup rs mul rmoveto
  ra 3 div -1 rb mul 3 div rlineto
  -1 6 rmoveto
  1 -6 rlineto
  -6 3 rlineto
  6 3 rmoveto
  ra 12 div -1 rb mul 12 div 5 sub rmoveto

  /Courier-Bold findfont 15 scalefont setfont
  (R) show
  /Symbol findfont 10 scalefont setfont
  0 -3 rmoveto
  (q) show
stroke

  r2 0.72 mul Theta1 2 div cos mul
  r2 0.72 mul Theta1 2 div sin mul -3 add moveto
  /Symbol findfont 15 scalefont setfont
  (q) show
  /Symbol findfont 10 scalefont setfont
  0 -3 rmoveto
  (1) show
stroke

  r2 0.56 mul Theta2 Theta1 add 2 div cos mul
  r2 0.56 mul Theta2 Theta1 add 2 div sin mul -3 add moveto
  /Symbol findfont 15 scalefont setfont
  (q) show
  /Symbol findfont 10 scalefont setfont
  0 -3 rmoveto
  (2) show
stroke

newpath
 0 0 0.50 r2 mul 0 Theta1 arc
 -2 -6 rmoveto
 2 6 rlineto
 6 -3 rlineto
stroke

newpath
 0 0 0.35 r2 mul 0 Theta2 arc
 2 -6 rmoveto
 -2 6 rlineto
 6 1 rlineto
stroke

 2.2 r0 mul 0 moveto
 -2.2 r0 mul  0 lineto
stroke

%-------------------------- 1-standard Conic -----------------------
TextFont setfont
2 setlinecap

 280 0 translate

   % Latitudes of the standard parallels, and constant of the cone.
   /Theta 45 def

   ()    0 w1 DrawMeridian
   ()   60 w1 DrawMeridian
   ()  120 w1 DrawMeridian
   ()  180 w4 DrawMeridian
   () -180 w4 DrawMeridian
   () -120 w1 DrawMeridian
   ()  -60 w1 DrawMeridian

   ()   60 w1 DrawParallel
   ()   30 w1 DrawParallel
   ()    0 w2 DrawParallel
   ()  -30 w1 DrawParallel
   ()  -60 w1 DrawParallel

w4 setlinewidth
/r2 2 sqrt r0 mul def
/rb r2 Theta sin div def
/rs Theta cos Theta sin div def
/ra r2 Theta cos div def

 ra 0 moveto
 0 rb lineto
 -1  ra mul 0 lineto
stroke

w2 setlinewidth
  0 0 moveto
  r2 Theta cos mul r2 Theta sin mul lineto
stroke

  0 rb moveto
  3 dup rs mul rmoveto
  10 dup rs mul rlineto
  -5 dup rs mul rmoveto
  ra 3 div -1 rb mul 3 div rlineto
  -1 6 rmoveto
  1 -6 rlineto
  -6 3 rlineto
  6 3 rmoveto
  ra 12 div -1 rb mul 12 div 5 sub rmoveto

  /Courier-Bold findfont 15 scalefont setfont
  (R) show
  /Symbol findfont 10 scalefont setfont
  0 -3 rmoveto
  (q) show
stroke

  r2 2 div Theta 2 div cos mul
  r2 2 div Theta 2 div sin mul -3 add moveto
  /Symbol findfont 15 scalefont setfont
  (q) show
  /Symbol findfont 10 scalefont setfont
  0 -3 rmoveto
  (1) show
stroke

newpath
 0 0 0.33 r2 mul 0 Theta arc
 1 -6 rmoveto
 -1 6 rlineto
 6 -2 rlineto
stroke

 2.2  r0 mul 0 moveto
 -2.2  r0 mul 0 lineto
stroke

%--------------------------  BON  -----------------------

 0 -145 translate
 0.9 0.9 scale

   /TextFont /Courier-Bold findfont 12 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 30 scalefont def
   /lablFont /Helvetica-Oblique findfont 20 scalefont def

lablFont setfont
 -131 -211 moveto
(Bonne's equal area projection) show
TextFont setfont

 -23 15 moveto
  /Symbol findfont 16.5 scalefont setfont
  (q) show
  /Symbol findfont 11 scalefont setfont
  0 -3 rmoveto
  (1) show
  /Symbol findfont 16.5 scalefont setfont
  0 3 rmoveto
  ( = 45) show
stroke

TextFont setfont

   % Latitude of the standard parallel.
   /Theta1 45 def
   /a0 Theta1 cos Theta1 sin div Theta1 pi mul 180 div add def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      setlinewidth
      /phi exch def
      /theta 90 def
      0 a0 pi 2 div sub r0 mul neg moveto
      60 {
         /theta theta 3 sub def
         /r1 a0 theta pi mul 180 div sub r0 mul def
         /a1 phi theta cos mul r0 mul r1 div def
         r1 a1 sin mul neg r1 a1 cos mul neg lineto
         } repeat
      /r1 a0 r0 mul def
      /a1 phi r0 mul r1 div def
      r1 a1 sin mul neg r1 a1 cos mul neg moveto
      -3 3 rmoveto
      90 rotate
      show
      -90 rotate
      stroke
      0 setgray
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      setlinewidth
      dup pi mul 180 div a0 exch sub dup
      3 -1 roll cos 180 mul exch div
      dup neg 90 sub
      exch 90 sub
      3 -1 roll
      r0 mul dup
      4 -2 roll
      0 0
      5 -3 roll
      arc
      0 exch neg moveto
      2 3 rmoveto
      show
      stroke
      0 setgray
      } def

TextFont setfont
2 setlinecap

  (0)    0 w4 DrawMeridian
   ()   15 w1 DrawMeridian
 (30)   30 w2 DrawMeridian
   ()   45 w1 DrawMeridian
 (60)   60 w2 DrawMeridian
   ()   75 w1 DrawMeridian
 (90)   90 w4 DrawMeridian
   ()  105 w1 DrawMeridian
(120)  120 w2 DrawMeridian
   ()  135 w1 DrawMeridian
(150)  150 w2 DrawMeridian
   ()  165 w1 DrawMeridian
(180)  180 w4 DrawMeridian
(180) -180 w4 DrawMeridian
   () -165 w1 DrawMeridian
(210) -150 w2 DrawMeridian
   () -135 w1 DrawMeridian
(240) -120 w2 DrawMeridian
   () -105 w1 DrawMeridian
(270)  -90 w4 DrawMeridian
   ()  -75 w1 DrawMeridian
(300)  -60 w2 DrawMeridian
   ()  -45 w1 DrawMeridian
(330)  -30 w2 DrawMeridian
   ()  -15 w1 DrawMeridian

   ()   90 w4 DrawParallel
   ()   75 w1 DrawParallel
 (60)   60 w2 DrawParallel
   ()   45 w1 DrawParallel
 (30)   30 w2 DrawParallel
   ()   15 w1 DrawParallel
  (0)    0 w4 DrawParallel
   ()  -15 w1 DrawParallel
(-30)  -30 w2 DrawParallel
   ()  -45 w1 DrawParallel
(-60)  -60 w2 DrawParallel
   ()  -75 w1 DrawParallel
   ()  -90 w4 DrawParallel

%--------------------------  GLS  -----------------------

 -310 -85 translate
 0.9 0.9 scale

   /TextFont /Courier-Bold findfont 13 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 33 scalefont def
   /lablFont /Helvetica-Oblique findfont 22 scalefont def

2 setlinecap

LablFont setfont
-188 118 moveto
(Conventional projections) show
lablFont setfont
 -74 -112 moveto
(GLS projection) show
TextFont setfont

   /r1 r0 pi mul 180 div def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      setlinewidth
      DrawSinusoid
      stroke
      0 moveto
      -2 2 rmoveto
      90 rotate
      show
      -90 rotate
      stroke
      0 setgray
      } def

   /DrawSinusoid {
      r1 mul neg
      /theta 90 def
      0 theta r1 mul moveto
      36 {
         /theta theta 5 sub def
         dup theta cos mul
         theta r1 mul lineto
         } repeat
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      setlinewidth
      dup
      cos r1 mul 180 mul
      exch r1 mul
      2 copy dup 0 exch 6 2 roll
      exch neg exch moveto lineto moveto
      2 2 rmoveto
      show
      stroke
      0 setgray
      } def

%190 100 translate

  (0)    0 w4 DrawMeridian
   ()   15 w1 DrawMeridian
 (30)   30 w2 DrawMeridian
   ()   45 w1 DrawMeridian
 (60)   60 w2 DrawMeridian
   ()   75 w1 DrawMeridian
 (90)   90 w4 DrawMeridian
   ()  105 w1 DrawMeridian
(120)  120 w2 DrawMeridian
   ()  135 w1 DrawMeridian
(150)  150 w2 DrawMeridian
   ()  165 w1 DrawMeridian
(180)  180 w4 DrawMeridian
(180) -180 w4 DrawMeridian
   () -165 w1 DrawMeridian
(210) -150 w2 DrawMeridian
   () -135 w1 DrawMeridian
(240) -120 w2 DrawMeridian
   () -105 w1 DrawMeridian
(270)  -90 w4 DrawMeridian
   ()  -75 w1 DrawMeridian
(300)  -60 w2 DrawMeridian
   ()  -45 w1 DrawMeridian
(330)  -30 w2 DrawMeridian
   ()  -15 w1 DrawMeridian

   ()   75 w1 DrawParallel
 (60)   60 w2 DrawParallel
   ()   45 w1 DrawParallel
 (30)   30 w2 DrawParallel
   ()   15 w1 DrawParallel
  (0)    0 w4 DrawParallel
   ()  -15 w1 DrawParallel
(-30)  -30 w2 DrawParallel
   ()  -45 w1 DrawParallel
(-60)  -60 w2 DrawParallel
   ()  -75 w1 DrawParallel

vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0
%%Title: Aitov.eps
%%Page: 5 5
%%%%BoundingBox: 0 0 380 200
%%PageBoundingBox: 0 0 380 200
%%EndComments

   /TextFont /Courier-Bold findfont 11 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 28 scalefont def
   /lablFont /Helvetica-Oblique findfont 19 scalefont def

   42  49  translate
  .88 .88  scale


                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /w1 0.4 def
   /w2 0.8 def
   /w4 1.6 def
   /ws 0.4 def
   /nstr 12 string def

   % Radius of the generating sphere.
   /r0 2 cm2pts mul def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      setlinewidth
      2 div dup
      cos /a1 exch def
      sin /a2 exch def
      /theta 90 def
      0 2 sqrt r0 mul moveto
      36 {
         /theta theta 5 sub def
         /a0 theta cos a1 mul 1 add 2 div sqrt def
         -2 r0 mul theta cos mul a2 mul a0 div
         r0 theta sin mul a0 div lineto
         } repeat
      stroke
      -2 r0 mul a2 mul a1 1 add 2 div sqrt div 0 moveto
      -2 2 rmoveto
      90 rotate
      show
      -90 rotate
      stroke
      0 setgray
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      setlinewidth
      dup
      cos /a1 exch def
      sin /a2 exch def
      /phi -180 def
      2 sqrt r0 mul dup 2 mul a1 mul exch a2 mul moveto
      72 {
         /phi phi 5 add def
         /a0 phi 2 div cos a1 mul 1 add 2 div sqrt def
         -2 r0 mul a1 mul phi 2 div sin mul a0 div
         r0 a2 mul a0 div lineto
         } repeat
      0 r0 a2 mul a1 1 add 2 div sqrt div moveto
      2 2 rmoveto
      show
      stroke
      0 setgray
      } def

userdict /start-hook known {start-hook} if


/vmsave save def
TextFont setfont
2 setlinecap

%190 100 translate
% center instead
 300 180 translate

1.2 1.2 scale

  (0)    0 w4 DrawMeridian
   ()   15 w1 DrawMeridian
 (30)   30 w2 DrawMeridian
   ()   45 w1 DrawMeridian
 (60)   60 w2 DrawMeridian
   ()   75 w1 DrawMeridian
 (90)   90 w4 DrawMeridian
   ()  105 w1 DrawMeridian
(120)  120 w2 DrawMeridian
   ()  135 w1 DrawMeridian
(150)  150 w2 DrawMeridian
   ()  165 w1 DrawMeridian
(180)  180 w4 DrawMeridian
(180) -180 w4 DrawMeridian
   () -165 w1 DrawMeridian
(210) -150 w2 DrawMeridian
   () -135 w1 DrawMeridian
(240) -120 w2 DrawMeridian
   () -105 w1 DrawMeridian
(270)  -90 w4 DrawMeridian
   ()  -75 w1 DrawMeridian
(300)  -60 w2 DrawMeridian
   ()  -45 w1 DrawMeridian
(330)  -30 w2 DrawMeridian
   ()  -15 w1 DrawMeridian

   ()   75 w1 DrawParallel
 (60)   60 w2 DrawParallel
   ()   45 w1 DrawParallel
 (30)   30 w2 DrawParallel
   ()   15 w1 DrawParallel
  (0)    0 w4 DrawParallel
   ()  -15 w1 DrawParallel
(-30)  -30 w2 DrawParallel
   ()  -45 w1 DrawParallel
(-60)  -60 w2 DrawParallel
   ()  -75 w1 DrawParallel

 -105 -110 moveto
lablFont setfont
(Hammer-Aitoff projection) show

%------------------- CSC native ----------------------------

   /TextFont /Courier-Bold findfont 13 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 34 scalefont def
   /lablFont /Helvetica-Oblique findfont 22.7 scalefont def

   /r1 r0 pi mul 180 div def
   /eps r0 8 div def

% Basic functions
   /Asin {
      dup dup mul 1 sub neg sqrt Atan
      } def

   /Acos {
      dup dup mul 1 sub neg sqrt exch Atan
      } def

   /Atan {
      /atanarg2 exch def
      /atanarg1 exch def
      atanarg1 abs 0.0000001 lt
      atanarg2 abs 0.0000001 lt and
      {0.0} {atanarg1 atanarg2 atan Fix} ifelse
      } def

   /Fix {
      dup 180 gt {360 sub} if
      } def

  /prt-n {
      dup abs 0.001 lt {pop 0} if
      nstr cvs show
      } def

% translate to the North Pole
   /ToPole {
      /deltap delta0 sin phip cos div Acos def
      /alphap phip sin neg delta0 cos div
           deltap sin neg phip cos mul delta0 cos div
           Atan alpha0 add Fix def
      } def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      ws mul setlinewidth
      /alpha exch def
      /delta 90 def
      DoMove
      90 {
         /delta delta 2 sub def
         DoDraw
         } repeat
      stroke
      MerShow
      0 setgray
      } def

  /MerShow {
      /delta -0.5 def
      DoMove
      /delta 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan def
      /delta 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

  /DebugDelta {
      1.1 r0 mul delta 90 sub 1.3 mul moveto
      (Theta ) show theta prt-n
      ( Phi ) show phi prt-n
      ( X ) show newx prt-n
      ( Y ) show newy prt-n
      stroke
      newx newy moveto
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      ws mul setlinewidth
      /delta exch def
      /alpha 180 def
      DoMove
      180 {
         /alpha alpha 2 sub def
         DoDraw
         } repeat
      stroke
      ParShow
      stroke
      0 setgray
      } def

  /ParShow {
      /alpha -0.5 def
      DoMove
      /alpha 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan 180 add Fix def
      /alpha 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

   /DrawBoundary {                 % ok for quad-sphere
      0 setgray
      ws mul setlinewidth
      0 0 moveto
      -7 r0 mul r0 rmoveto
      6 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      2 r0 mul 0 rlineto
      0 -6 r0 mul rlineto
      -2 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      -6 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      stroke
%                                rest draws interior boundaries
      ws mul setlinewidth
      0 0 moveto
      -5 r0 mul r0 rmoveto
      0 -2 r0 mul rlineto
      2 r0 mul 0 rmoveto
      0 2 r0 mul rlineto
      4 r0 mul 0 rmoveto
     -2 r0 mul 0 rlineto
      0 -2 r0 mul rlineto
      2 r0 mul 0 rlineto
      stroke
      } def

   /DoMove {
      DoGeom
      newx newy moveto
      /oldx newx def
      /oldy newy def
      } def

   /DoDraw {
      DoGeom
      newx newy 
      newx oldx sub dup mul  newy oldy sub dup mul 
      add sqrt eps gt {moveto} {lineto} ifelse 
      /oldx newx def
      /oldy newy def
      } def

   /DoGeom {
      GetTheta
      GetPhi
      TheGeom
      } def

   /TheGeom {                       % CSC
      /dirl theta cos phi sin mul def
      /dirm theta cos phi cos mul def
      /dirn theta sin def
      SetFace
      /newx Alph Beta InvFunc r0 mul neg Xoff add def
      /newy Beta Alph InvFunc r0 mul Yoff add def 
      } def

   /InvFunc {                       % CSC only
      /B exch def   /BB B B mul def  /BB1 1 BB sub def
      /A exch def   /AA A A mul def  /AA1 1 AA sub def
      /gammas 1.37484847732 def
      /CapG  -0.13161671474 def
      /Term1 {1 gammas sub AA mul gammas add} def
      /Term3 {-0.159596235474 -0.0217762491 AA mul 0.07591962 add
             AA1 mul sub AA mul AA1 mul} def
      /Term2 {0.141189631152 0.0809701286525 AA mul add
             -0.28152853557 BB mul add
             -0.178251207466 AA mul AA mul add
             0.15384112876 AA mul BB mul add
             0.106959469314 BB mul BB mul add BB1 mul
            -0.13161671474 add 0.136486207 AA mul add
            BB mul AA1 mul} def
       Term1 Term2 add Term3 add A mul
       } def

   /SetFace {                       % CSC only
      dirl abs dirm abs ge dirl abs dirn abs ge and
          {dirl dup neg gt {Face2} {Face4} ifelse} if
      dirm abs dirl abs ge dirm abs dirn abs ge and
          {dirm dup neg gt {Face1} {Face3} ifelse} if
      dirn abs dirm abs ge dirn abs dirl abs ge and
          {dirn dup neg gt {Face0} {Face5} ifelse} if
      } def

   /Face2 {                         % CSC only
      /Face 2 def
      ( Face ) Face
      /Alph dirm dirl div neg def
      /Beta dirn dirl div def
      /Xoff -2 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face4 {                         % CSC only
      /Face 4 def
      ( Face ) Face
      /Alph dirm dirl div neg def
      /Beta dirn dirl div neg def
      /Xoff -6 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face1 {                         % CSC only
      /Face 1 def
      ( Face ) Face
      /Alph dirl dirm div def
      /Beta dirn dirm div def
      /Xoff 0 def
      /Yoff 0 def
      pop pop
      } def

   /Face3 {                         % CSC only
      /Face 3 def
      ( Face ) Face
      /Alph dirl dirm div def
      /Beta dirn dirm div neg def
      /Xoff -4 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face0 {                         % CSC only
      /Face 0 def
      ( Face ) Face
      /Alph dirl dirn div def
      /Beta dirm dirn div neg def
      /Xoff 0 def
      /Yoff 2 r0 mul def
      pop pop
      } def

   /Face5 {                         % CSC only
      /Face 5 def
      ( Face ) Face
      /Alph dirl dirn div neg def
      /Beta dirm dirn div neg def
      /Xoff 0 def
      /Yoff -2 r0 mul def
      pop pop
      } def

   /GetTheta {
      /theta delta sin deltap sin mul delta cos deltap cos mul
                alpha alphap sub cos mul add Asin def
      } def

   /GetPhi {
      theta cos 0.00001 gt
      {/phi alphap alpha sub sin delta cos mul
               delta sin deltap cos mul
               delta cos deltap sin mul alpha alphap sub cos mul sub
               Atan phip add Fix def}
      {/phi alpha alphap sub Fix 180 add Fix phip add Fix def}
      ifelse
      } def

   /DrawAll {
      0 0 moveto

        (0)    0 4 DrawMeridian
         ()   15 2 DrawMeridian
       (30)   30 3 DrawMeridian
         ()   45 2 DrawMeridian
       (60)   60 3 DrawMeridian
         ()   75 2 DrawMeridian
       (90)   90 4 DrawMeridian
         ()  105 2 DrawMeridian
      (120)  120 3 DrawMeridian
         ()  135 2 DrawMeridian
      (150)  150 3 DrawMeridian
         ()  165 2 DrawMeridian
      (180)  180 4 DrawMeridian
      (180) -180 4 DrawMeridian
         () -165 2 DrawMeridian
      (210) -150 3 DrawMeridian
         () -135 2 DrawMeridian
      (240) -120 3 DrawMeridian
         () -105 2 DrawMeridian
      (270)  -90 4 DrawMeridian
         ()  -75 2 DrawMeridian
      (300)  -60 3 DrawMeridian
         ()  -45 2 DrawMeridian
      (330)  -30 3 DrawMeridian
         ()  -15 2 DrawMeridian

         ()   75 2 DrawParallel
       (60)   60 3 DrawParallel
         ()   45 2 DrawParallel
       (30)   30 3 DrawParallel
         ()   15 2 DrawParallel
        (0)    0 4 DrawParallel
         ()  -15 2 DrawParallel
      (-30)  -30 3 DrawParallel
         ()  -45 2 DrawParallel
      (-60)  -60 3 DrawParallel
         ()  -75 2 DrawParallel
      1 3 DrawBoundary
   } def

TextFont setfont
2 setlinecap

 1 1.2 div dup scale
 -300 180 translate
   65 -20 translate
7 r0 mul 10 add 3 r0 mul 10 add  translate

% basic rotations
   /alpha0 0 def
   /delta0 0 def
   /phip 180 def

   ToPole

   DrawAll

 -420 -200 moveto
lablFont setfont
(Cobe Quadrilateralized Spherical Cube projection) show

 -406 200 moveto
LablFont setfont
(Native Spherical Coordinates) show

vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0
%%Page: 6 6
%%%%BoundingBox: 0 0 760 400
%%PageBoundingBox: 0 0 760 400
%%EndComments

   /TextFont /Courier-Bold findfont 10 scalefont def
   /lablFont /Courier-Bold findfont 14 scalefont def

   44  52 translate
  .87 .87 scale

 90 rotate
 18 -525 translate

                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /ws 0.4 def
   /nstr 10 string def

% Radius of the generating sphere.
   /r0 2 cm2pts mul def
   /r1 r0 pi mul 180 div def
   /eps r0 8 div def

% Basic functions
   /Asin {
      dup dup mul 1 sub neg sqrt Atan
      } def

   /Acos {
      dup dup mul 1 sub neg sqrt exch Atan
      } def

   /Atan {
      atan Fix
      } def

   /Fix {
      dup 180 gt {360 sub} if
      } def

   /abs {
      dup 0 lt {neg} if
      } def

   /prt-n {
      dup abs 0.001 lt {pop 0} if
      nstr cvs show
      } def

% translate to the North Pole
   /ToPole {
      /deltap delta0 sin phip cos div Acos def
      /alphap phip sin neg delta0 cos div
           deltap sin neg phip cos mul delta0 cos div
           Atan alpha0 add Fix def
      } def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      ws mul setlinewidth
      /alpha exch def
      /delta 90 def
      DoMove
      90 {
         /delta delta 2 sub def
         DoDraw
         } repeat
      stroke
      MerShow
      0 setgray
      } def

  /MerShow {
      /delta -0.5 def
      DoMove
      /delta 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan def
      /delta 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

  /DebugDelta {
      1.1 r0 mul delta 90 sub 1.3 mul moveto
      (Theta ) show theta prt-n
      ( Phi ) show phi prt-n
      ( X ) show newx prt-n
      ( Y ) show newy prt-n
      stroke
      newx newy moveto
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      ws mul setlinewidth
      /delta exch def
      /alpha 180 def
      DoMove
      180 {
         /alpha alpha 2 sub def
         DoDraw
         } repeat
      stroke
      ParShow
      stroke
      0 setgray
      } def

  /ParShow {
      /alpha -0.5 def
      DoMove
      /alpha 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan 180 add Fix def
      /alpha 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

   /DrawBoundary {                 % ok for GLS
      0 setgray
      ws mul setlinewidth
      /phi 180 def
      /theta 90 def
      TheGeom
      newx newy moveto
      60 {
         /theta theta 3 sub def
         TheGeom
         newx newy lineto
         } repeat
      /phi -180 def
      /theta 90 def
      TheGeom
      newx newy moveto
      60 {
         /theta theta 3 sub def
         TheGeom
         newx newy lineto
         } repeat
      stroke
      } def

   /DoMove {
      DoGeom
      newx newy moveto
      /oldx newx def
      /oldy newy def
      } def

   /DoDraw {
      DoGeom
      newx newy 
      newx oldx sub dup mul  newy oldy sub dup mul 
      add sqrt eps gt {moveto} {lineto} ifelse 
      /oldx newx def
      /oldy newy def
      } def

   /DoGeom {
      GetTheta
      GetPhi
      TheGeom
      } def

   /TheGeom {                       % AIT geometry
      /temp 2 1 theta cos phi 2 div cos mul add div sqrt def
      /newx r0 neg 2 mul temp mul theta cos mul phi 2 div sin mul def
      /newy r0 temp mul theta sin mul def
      } def

   /GetTheta {
      /theta delta sin deltap sin mul delta cos deltap cos mul
                alpha alphap sub cos mul add Asin def
      } def

   /GetPhi {
      theta cos 0.00001 gt
      {/phi alphap alpha sub sin delta cos mul
               delta sin deltap cos mul
               delta cos deltap sin mul alpha alphap sub cos mul sub
               Atan phip add Fix def}
      {/phi alpha alphap sub Fix 180 add Fix phip add Fix def}
      ifelse
      } def

   /DrawAll {
      lablFont setfont
      0 setgray
      -2.75 r0 mul 6 add -1.8 r0 mul moveto show   % AIT
      TextFont setfont

        (0)    0 3 DrawMeridian
       (30)   30 2 DrawMeridian
       (60)   60 2 DrawMeridian
       (90)   90 3 DrawMeridian
      (120)  120 2 DrawMeridian
      (150)  150 2 DrawMeridian
      (180)  180 3 DrawMeridian
      (180) -180 3 DrawMeridian
      (210) -150 2 DrawMeridian
      (240) -120 2 DrawMeridian
      (270)  -90 3 DrawMeridian
      (300)  -60 2 DrawMeridian
      (330)  -30 2 DrawMeridian

       (60)   60 2 DrawParallel
       (30)   30 2 DrawParallel
        (0)    0 3 DrawParallel
      (-30)  -30 2 DrawParallel
      (-60)  -60 2 DrawParallel
      1 DrawBoundary
   } def

   /DoAll {
      /alphap  0 def   /deltap 30 def   /phip 180 def
         (origin (0, -60),  180, pole (0, 30)) DrawAll
      DeltaX 0 translate
      /alphap  0 def   /deltap 30 def   /phip 150 def
         (origin (49, -49),  150, pole (0, 30)) DrawAll
      DeltaX neg DeltaY translate
      /alphap 45 def   /deltap 30 def   /phip 180 def
         (origin (45, -60),  180, pole (45, 30)) DrawAll
      DeltaX 0 translate
      /alphap  0 def   /deltap 30 def   /phip  75 def
         (origin (98, 13),  75, pole (0, 30)) DrawAll
      } def

userdict /start-hook known {start-hook} if


/vmsave save def
TextFont setfont
2 setlinecap

193 100 translate

/DeltaX 370 def
/DeltaY 247 def

DoAll

0 setgray

/LablFont /Helvetica-BoldOblique findfont 35 scalefont def
/lablFont /Helvetica-Oblique findfont 23 scalefont def

DeltaX -0.82 mul 8 add DeltaY -1.6 mul moveto
lablFont setfont
(Hammer-Aitoff projection) show

DeltaX -0.82 mul 109 sub DeltaY 0.4 mul 25 add moveto
LablFont setfont
(Standard Spherical Coordinates) show

vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0
%%Title: CSCex0.ps
%%Page: 7 7
%%%%BoundingBox: 0 0 760 988
%%PageBoundingBox: 0 0 760 988
%%EndComments

   /TextFont /Courier-Bold findfont 14 scalefont def
   /LablFont /Courier-Bold findfont 20 scalefont def

                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /ws 0.4 def
   /nstr 12 string def

% Radius of the generating sphere.
   /r0 2 cm2pts mul def
   /r1 r0 pi mul 180 div def
   /eps r0 8 div def

% Basic functions
   /Asin {
      dup dup mul 1 sub neg sqrt Atan
      } def

   /Acos {
      dup dup mul 1 sub neg sqrt exch Atan
      } def

   /Atan {
      /atanarg2 exch def
      /atanarg1 exch def
      atanarg1 abs 0.0000001 lt
      atanarg2 abs 0.0000001 lt and
      {0.0} {atanarg1 atanarg2 atan Fix} ifelse
      } def

   /Fix {
      dup 180 gt {360 sub} if
      } def

  /prt-n {
      dup abs 0.001 lt {pop 0} if
      nstr cvs show
      } def

% translate to the North Pole
   /ToPole {
      /deltap delta0 sin phip cos div Acos def
      /alphap phip sin neg delta0 cos div
           deltap sin neg phip cos mul delta0 cos div
           Atan alpha0 add Fix def
      } def

   /DrawMeridian {
      color 1 eq {0.9 0 0 setrgbcolor} if
      ws mul setlinewidth
      /alpha exch def
      /delta 90 def
      DoMove
      90 {
         /delta delta 2 sub def
         DoDraw
         } repeat
      stroke
      MerShow
      0 setgray
      } def

  /MerShow {
      /delta -0.5 def
      DoMove
      /delta 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan def
      /delta 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

  /DebugDelta {
      1.1 r0 mul delta 90 sub 1.3 mul moveto
      (Theta ) show theta prt-n
      ( Phi ) show phi prt-n
      ( X ) show newx prt-n
      ( Y ) show newy prt-n
      stroke
      newx newy moveto
      } def

   /DrawParallel {
      color 1 eq {0 1 0 setrgbcolor} if
      ws mul setlinewidth
      /delta exch def
      /alpha 180 def
      DoMove
      180 {
         /alpha alpha 2 sub def
         DoDraw
         } repeat
      stroke
      ParShow
      stroke
      0 setgray
      } def

  /ParShow {
      /alpha -0.5 def
      DoMove
      /alpha 0.5 def
      DoGeom
      /TheRot newy oldy sub newx oldx sub Atan 180 add Fix def
      /alpha 0 def
      DoMove
      TheRot rotate
      2 2 rmoveto
      show
      TheRot neg rotate
      } def

   /DrawBoundary {                 % ok for quad-sphere
      0 setgray
      ws mul setlinewidth
      0 0 moveto
      -7 r0 mul r0 rmoveto
      6 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      2 r0 mul 0 rlineto
      0 -6 r0 mul rlineto
      -2 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      -6 r0 mul 0 rlineto
      0 2 r0 mul rlineto
      stroke
%                                rest draws interior boundaries
      ws mul setlinewidth
      0 0 moveto
      -5 r0 mul r0 rmoveto
      0 -2 r0 mul rlineto
      2 r0 mul 0 rmoveto
      0 2 r0 mul rlineto
      4 r0 mul 0 rmoveto
     -2 r0 mul 0 rlineto
      0 -2 r0 mul rlineto
      2 r0 mul 0 rlineto
      stroke
      } def

   /DoMove {
      DoGeom
      newx newy moveto
      /oldx newx def
      /oldy newy def
      } def

   /DoDraw {
      DoGeom
      newx newy 
      newx oldx sub dup mul  newy oldy sub dup mul 
      add sqrt eps gt {moveto} {lineto} ifelse 
      /oldx newx def
      /oldy newy def
      } def

   /DoGeom {
      GetTheta
      GetPhi
      TheGeom
      } def

   /TheGeom {                       % CSC
      /dirl theta cos phi sin mul def
      /dirm theta cos phi cos mul def
      /dirn theta sin def
      SetFace
      /newx Alph Beta InvFunc r0 mul neg Xoff add def
      /newy Beta Alph InvFunc r0 mul Yoff add def 
      } def

   /InvFunc {                       % CSC only
      /B exch def   /BB B B mul def  /BB1 1 BB sub def
      /A exch def   /AA A A mul def  /AA1 1 AA sub def
      /gammas 1.37484847732 def
      /CapG  -0.13161671474 def
      /Term1 {1 gammas sub AA mul gammas add} def
      /Term3 {-0.159596235474 -0.0217762491 AA mul 0.07591962 add
             AA1 mul sub AA mul AA1 mul} def
      /Term2 {0.141189631152 0.0809701286525 AA mul add
             -0.28152853557 BB mul add
             -0.178251207466 AA mul AA mul add
             0.15384112876 AA mul BB mul add
             0.106959469314 BB mul BB mul add BB1 mul
            -0.13161671474 add 0.136486207 AA mul add
            BB mul AA1 mul} def
       Term1 Term2 add Term3 add A mul
       } def

   /SetFace {                       % CSC only
      dirl abs dirm abs ge dirl abs dirn abs ge and
          {dirl dup neg gt {Face2} {Face4} ifelse} if
      dirm abs dirl abs ge dirm abs dirn abs ge and
          {dirm dup neg gt {Face1} {Face3} ifelse} if
      dirn abs dirm abs ge dirn abs dirl abs ge and
          {dirn dup neg gt {Face0} {Face5} ifelse} if
      } def

   /Face2 {                         % CSC only
      /Face 2 def
      ( Face ) Face
      /Alph dirm dirl div neg def
      /Beta dirn dirl div def
      /Xoff -2 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face4 {                         % CSC only
      /Face 4 def
      ( Face ) Face
      /Alph dirm dirl div neg def
      /Beta dirn dirl div neg def
      /Xoff -6 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face1 {                         % CSC only
      /Face 1 def
      ( Face ) Face
      /Alph dirl dirm div def
      /Beta dirn dirm div def
      /Xoff 0 def
      /Yoff 0 def
      pop pop
      } def

   /Face3 {                         % CSC only
      /Face 3 def
      ( Face ) Face
      /Alph dirl dirm div def
      /Beta dirn dirm div neg def
      /Xoff -4 r0 mul def
      /Yoff 0 def
      pop pop
      } def

   /Face0 {                         % CSC only
      /Face 0 def
      ( Face ) Face
      /Alph dirl dirn div def
      /Beta dirm dirn div neg def
      /Xoff 0 def
      /Yoff 2 r0 mul def
      pop pop
      } def

   /Face5 {                         % CSC only
      /Face 5 def
      ( Face ) Face
      /Alph dirl dirn div neg def
      /Beta dirm dirn div neg def
      /Xoff 0 def
      /Yoff -2 r0 mul def
      pop pop
      } def

   /GetTheta {
      /theta delta sin deltap sin mul delta cos deltap cos mul
                alpha alphap sub cos mul add Asin def
      } def

   /GetPhi {
      theta cos 0.00001 gt
      {/phi alphap alpha sub sin delta cos mul
               delta sin deltap cos mul
               delta cos deltap sin mul alpha alphap sub cos mul sub
               Atan phip add Fix def}
      {/phi alpha alphap sub Fix 180 add Fix phip add Fix def}
      ifelse
      } def

   /DrawAll {
      0 0 moveto
      LablFont setfont
      0 setgray
      -7 r0 mul -3 r0 mul 35 sub moveto show   % CSC
      TextFont setfont

        (0)    0 4 DrawMeridian
       (30)   30 3 DrawMeridian
       (60)   60 3 DrawMeridian
       (90)   90 4 DrawMeridian
      (120)  120 3 DrawMeridian
      (150)  150 3 DrawMeridian
      (180)  180 4 DrawMeridian
      (180) -180 4 DrawMeridian
      (210) -150 3 DrawMeridian
      (240) -120 3 DrawMeridian
      (270)  -90 4 DrawMeridian
      (300)  -60 3 DrawMeridian
      (330)  -30 3 DrawMeridian

       (60)   60 3 DrawParallel
       (30)   30 3 DrawParallel
        (0)    0 4 DrawParallel
      (-30)  -30 3 DrawParallel
      (-60)  -60 3 DrawParallel
      1 3 DrawBoundary
   } def

   /DoAll {
      /alphap  0 def   /deltap 30 def   /phip 180 def
         (origin (0, -60),  180, pole (0, 30)) DrawAll
      DeltaX 0 translate
      /alphap  0 def   /deltap 30 def   /phip 150 def
         (origin (49, -49),  150, pole (0, 30)) DrawAll
      DeltaX neg DeltaY translate
      /alphap 45 def   /deltap 30 def   /phip 180 def
         (origin (45, -60),  180, pole (45, 30)) DrawAll
      DeltaX 0 translate
      /alphap  0 def   /deltap 30 def   /phip  75 def
         (origin (98, 13),  75, pole (0, 30)) DrawAll
      } def

userdict /start-hook known {start-hook} if


/vmsave save def
TextFont setfont
2 setlinecap

0.60 0.60 scale
890 165 translate
90 rotate

7 r0 mul 21 add 3 r0 mul 24 add translate

/DeltaX 8 r0 mul 40 add def
/DeltaY 6 r0 mul 69 add def

   DoAll

0 setgray
-15 4 r0 mul sub 0 translate

/LablFont /Helvetica-BoldOblique findfont 50 scalefont def
/lablFont /Helvetica-Oblique findfont 33.3 scalefont def

DeltaX -0.99 mul 50 sub DeltaY -1.6 mul 12 sub moveto
lablFont setfont
(Cobe Quadrilateralized Spherical Cube projection) show

DeltaX -0.82 mul 149 sub DeltaY 0.4 mul 45 add moveto
LablFont setfont
(Standard Spherical Coordinates) show


vmsave restore
showpage
%%PageTrailer
userdict /end-hook known {end-hook} if

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%!PS-Adobe-2.0
%%Page: 8 8
%%%%BoundingBox: 0 0 685 380
%%PageBoundingBox: 0 0 685 380
%%EndComments

   /TextFont /Courier-Bold findfont 15 scalefont def
   /LablFont /Helvetica-BoldOblique findfont 36 scalefont def

  14  50 translate
0.79 .85 scale

 25 360 translate
 114 387 moveto
LablFont setfont
(DOES GEOMETRY MATTER ?) show

                            % color flag 1 => yes
   /color 1 def
                            % Constants.
   /cm2pts 72 2.54 div def
   /pi 3.1416 def
   /ws 0.4 def
   /nstr 10 string def
                            % Radius of the generating sphere.
   /r0 2 cm2pts mul def
   /r1 r0 pi mul 180 div def
   /eps r0 8 div def

                            % Basic functions
   /Asin {
      dup dup mul 1 sub neg sqrt Atan
      } def

   /Acos {
      dup dup mul 1 sub neg sqrt exch Atan
      } def

   /Atan {
      atan Fix
      } def

   /Fix {
      dup 180 gt {360 sub} if
      } def

   /abs {
      dup 0 lt {neg} if
      } def

  /prt-n {
      dup abs 0.001 lt {pop 0} if
      nstr cvs show
      } def

/ytick {
   10 exch yi mul moveto
  -10 0 rlineto
  -9 mul 4 sub -5 rmoveto
  show
  } def

/xtick {
  dup 90 sub xi mul neg 10 moveto
  0 -10 rlineto
  -10 -17 rmoveto
  prt-n
  } def

/pZEA {
  alpha xi mul
  alpha 2 div sin alpha 4 div sin dup mul 4 mul mul
  Log yi mul lineto
  } def
/sZEA {pZEA} def

/pTAN {
  alpha xi mul
  alpha 2 div sin dup mul 2 mul alpha cos div
  Log yi mul lineto
  } def
/sTAN {pTAN} def

/pSTG {
  alpha xi mul
  alpha 2 div sin alpha 2 div cos div dup mul
  Log yi mul lineto
  } def
/sSTG {pSTG} def

/pARC {
  alpha xi mul
  pi alpha mul 180 div alpha sin div 1 sub
  Log yi mul lineto
  } def
/sARC {
  alpha xi mul
  pi alpha mul 180 div dup mul 6 div
  Log yi mul lineto
  } def

/Log {
  alpha sin 180 mul 3600 mul pi div mul
  dup 0.01 lt {pop 0.01} if
  dup 10000000.0 gt {pop 10000000.0} if log
  } def

/DoPlot {
   /alpha 0 def
   0 -2 yi mul moveto
   40 {
      /alpha alpha 0.1 add def
      SmallGeom
      } repeat
   85 {
      /alpha alpha 1 add def
      TheGeom
      } repeat
   } def

userdict /start-hook known {start-hook} if


/vmsave save def
TextFont setfont
0 setgray
2 setlinecap

/lmax 2 def
/lmin -3 def
/yi r0 1.5 div def
/xi r0 9 div def

ws 4 mul setlinewidth
80 2 yi mul 20 add translate
 0  7 yi mul moveto
 0 -2 yi mul lineto
 90 xi mul 0 moveto
 0 0 lineto
(0.01)     4 -2 ytick
(0.1)      3 -1 ytick
(1)        1  0 ytick
(10)       2  1 ytick
(100)      3  2 ytick
(1000)     4  3 ytick
(10000)    5  4 ytick
(100000)   6  5 ytick
(1000000)  7  6 ytick
(10000000) 8  7 ytick
  0 xtick
 15 xtick
 30 xtick
 45 xtick
 60 xtick
 75 xtick
 stroke
                             % a grid
ws setlinewidth
color 1 eq {1 0.5 1 setrgbcolor} if
/xpt 0 def
   6 {
     /xpt xpt 15 xi mul add def
     xpt  7 yi mul moveto
     xpt -2 yi mul lineto
     } repeat
/ypt -3 yi mul def
  10 {
     /ypt yi ypt add def
     90 xi mul ypt moveto
     0 ypt lineto
     } repeat
stroke
                             % the drawing
ws 2 mul setlinewidth

color 1 eq {0.9 0 0 setrgbcolor} if
/TheGeom {pTAN} def
/SmallGeom {sTAN} def
DoPlot
2 -5 rmoveto
( TAN) show
stroke

color 1 eq {1 0.7 0 setrgbcolor} if
/TheGeom {pSTG} def
/SmallGeom {sSTG} def
DoPlot
2 1 rmoveto
( STG) show
stroke

color 1 eq {0 1 1 setrgbcolor} if
/TheGeom {pZEA} def
/SmallGeom {sZEA} def
DoPlot
2 -9 rmoveto
( ZEA) show
stroke

color 1 eq {0 1 0 setrgbcolor} if
/TheGeom {pARC} def
/SmallGeom {sARC} def
DoPlot
2 -2 rmoveto
( ARC) show
stroke

 0 setgray
/Symbol findfont 20 scalefont setfont
 45 xi mul 5 sub -45 moveto
 (q) show
 stroke

%----------------------------- sub plot --------------------------

 -80 -425 translate

TextFont setfont
 250 330 moveto
(R(projection) - R(SIN projection)) show
 30 200 moveto
 90 rotate
(arc seconds) show
-90 rotate

 30 400 moveto
 90 rotate
(arc seconds) show
-90 rotate

/Log {
  alpha sin 180 mul 3600 mul pi div mul
  dup 0.000001 lt {pop 0.000001} if
  dup 100.0 gt {pop 100.0} if log
  } def

/DoPlot {
   /alpha 0 def
   0 -6 yi mul moveto
   80 {
      /alpha alpha 0.025 add def
      SmallGeom
      } repeat
   60 {
      /alpha alpha 0.05 add def
      TheGeom
      } repeat
   } def

TextFont setfont
2 setlinecap

/lmax 2 def
/lmin -3 def
/yi r0 1.5 div def
/xi r0 2 mul def

ws 4 mul setlinewidth
80 6 yi mul 20 add translate
 0  2 yi mul moveto
 0 -6 yi mul lineto
 5 xi mul 0 moveto
 0 0 lineto
(0.000001) 8 -6 ytick
(0.00001)  7 -5 ytick
(0.0001)   6 -4 ytick
(0.001)    5 -3 ytick
(0.01)     4 -2 ytick
(0.1)      3 -1 ytick
(1)        1  0 ytick
(10)       2  1 ytick
(100)      3  2 ytick
 85 xtick
 86 xtick
 87 xtick
 88 xtick
 89 xtick
 stroke
                             % a grid
ws setlinewidth
color 1 eq {1 0.5 1 setrgbcolor} if
/xpt 0 def
   5 {
     /xpt xpt xi add def
     xpt  2 yi mul moveto
     xpt -6 yi mul lineto
     } repeat
/ypt -7 yi mul def
  9 {
     /ypt yi ypt add def
     5 xi mul ypt moveto
     0 ypt lineto
     } repeat
stroke

ws 2 mul setlinewidth

color 1 eq {0.9 0 0 setrgbcolor} if
/alpha 0 def
/TheGeom {pTAN} def
/SmallGeom {sTAN} def
DoPlot
2 1 rmoveto
( TAN) show
stroke

color 1 eq {0.9 0.7 0 setrgbcolor} if
/TheGeom {pSTG} def
/SmallGeom {sSTG} def
DoPlot
2 -2 rmoveto
( STG) show
stroke

color 1 eq {0 1 1 setrgbcolor} if
/TheGeom {pZEA} def
/SmallGeom {sZEA} def
DoPlot
2 -4 rmoveto
( ZEA) show
stroke

color 1 eq {0 1 0 setrgbcolor} if
/TheGeom {pARC} def
/SmallGeom {sARC} def
DoPlot
2 -7 rmoveto
( ARC) show
stroke

 0 setgray
/Symbol findfont 20 scalefont setfont
 2.5 xi mul 5 sub -30 moveto
 (q) show
 stroke

vmsave restore
showpage


%%PageTrailer
userdict /end-hook known {end-hook} if
%%Trailer
%%EOF
%%EndDocument
